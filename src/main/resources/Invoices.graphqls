schema {
    query: Query
}

type Query{
    findAllInvoices : Invoice
    invoiceById(id: ID): Invoice
    findByUuid(uuid: String):Invoice
    findByStatus(status: String):Invoice
    Invoice_PaymentsByID(id:ID): Invoice
}

enum Status {
    Open
    Paid
    Expired
}

type Invoice {
    id : ID
    uuid : String
    memo : String
    email : String
    first_name : String
    lastName : String
    status : String
    return_url : String
    callback_url : String
    expires_at : String
    created_at : String
    update_at : String
    seller_name : String
    amount : String
    currency : String
    payment_id : Invoice_Payments
    cancel_url : String
    extra_data : String
    endpoint : String
    doi : String
    ip : String
    option_timestamp : String
    selected_currencies : String
    endpoint_version : String
    note : String
}
type Invoice_Payments {
    id : ID
    invoice_id :String
    uuid: String
    currency :String
    electrum_amount : Float
    electrum_id : String
    electrum_uri :String
    electrum_address : String
    electrum_expires_at :String
    created_at : String
    update_at :String
}

type InvoiceMutation{
    newInvoice(first_name: String, last_name:String): Invoice
    deleteInvoice(id:ID): Boolean
}




